<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='business' inline='true' name='federated.1fj7z2m01uyse31h95vvu10oazg7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='business' name='semistructpassivestore-direct.1ngdlls0wa0pyj18w97l01b34e7x'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/rgurlek/Desktop/yelp' filename='business.json' password='' port='0' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[business.json]'>
                  <map key='attributes' value='false' />
                  <map key='hours' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1ngdlls0wa0pyj18w97l01b34e7x' name='business.json' table='[business.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>business_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[is_open]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>is_open</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[business.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>business_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Open' datatype='real' name='[is_open]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>is_open</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Review Count' datatype='real' name='[review_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>review_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='None' caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Business' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[address]' type='field' />
        <folder-item name='[business_id]' type='field' />
        <folder-item name='[categories]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[postal_code]' type='field' />
        <folder-item name='[state]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.513854' measure-ordering='alphabetic' measure-percentage='0.486146' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='business' name='federated.1fj7z2m01uyse31h95vvu10oazg7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fj7z2m01uyse31h95vvu10oazg7'>
            <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>city</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fj7z2m01uyse31h95vvu10oazg7].[Longitude (generated)]' field-type='quantitative' max='-8643413.6352776457' min='-9254412.3297625855' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fj7z2m01uyse31h95vvu10oazg7].[Latitude (generated)]' field-type='quantitative' max='4326294.82113906' min='4013784.0291100568' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:latitude:qk]' />
              <lod column='[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:longitude:qk]' />
              <lod column='[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:city:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Latitude (generated)]</rows>
        <cols>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5C080228-5502-4960-80ED-3A41B42662D6}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:latitude:qk]</field>
                  <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:longitude:qk]</field>
                  <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Latitude (generated)]</field>
                  <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>35.240130999999998</value>
                <value>-81.022492999999997</value>
                <value>35.240130999999998</value>
                <value>-81.022492999999997</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:city:nk]</field>
            <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:latitude:qk]</field>
            <field>[federated.1fj7z2m01uyse31h95vvu10oazg7].[none:longitude:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C292E58C-B4CB-4F2B-B787-A98E7FBB534B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
